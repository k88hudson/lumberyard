{
  "name": "badgekit-api-client",
  "version": "0.2.1",
  "description": "A client for the badgekit issuer",
  "main": "index.js",
  "author": {
    "name": "Mozilla OpenBadges"
  },
  "license": "MPLv2",
  "dependencies": {
    "jws": "~0.2.5",
    "mime": "~1.2.11",
    "request": "~2.31.0"
  },
  "devDependencies": {
    "badgekit-api": "git://github.com/mozilla/badgekit-api",
    "jshint": "~2.3.0",
    "tap": "~0.4.6"
  },
  "scripts": {
    "test": "npm run lint && tap test/*.test.js",
    "lint": "jshint --verbose index.js methods/*.js models/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mozilla/badgekit-api-client.git"
  },
  "bugs": {
    "url": "https://github.com/mozilla/badgekit-api-client/issues"
  },
  "homepage": "https://github.com/mozilla/badgekit-api-client",
  "jshintConfig": {
    "esnext": true,
    "asi": true
  },
  "readme": "# Badgekit API Client\n\nA Node client library for [`badgekit-api`](https://github.com/mozilla/badgekit-api).\n\n[![Build Status](https://travis-ci.org/mozilla/badgekit-api-client.svg?branch=master)](https://travis-ci.org/mozilla/badgekit-api-client)\n\n## Installation\n\n```\n> npm install mozilla/badgekit-api-client\n```\n\n## Usage\n\n```\nconst Client = require('badgekit-api-client');\n\nvar apiEndpoint = 'https://api.example.org';\nvar auth = {\n  key: '<auth key>',\n  secret: '<auth secret>'\n};\n\nvar client = new Client(apiEndpoint, auth);\n```\n\n## Documentation\n\nFull documentation is available under [`/docs`](docs/index.md).\n\nAll client methods accept a context object, and (optionally) a callback function. The context object is expected to contain namespaced sub-objects, describing the systems, badges, etc relevant to the function call. Passing in a simple string will auto-expand. That is, `{system: 'system-slug'}` is equivalent to `{system: {slug: 'system-slug'}}`.\n\nCallback functions should accept two arguments; an error (where thrown), and any response data.\n\n```\nclient.getBadges({system: 'system-slug'}, function (err, badges) {\n  if (err) return handleError(err);\n\n  badges.forEach(function (badge) {\n    // handle badge\n  });\n});\n```\n\n[Response data items](docs/models.md) all have basic functionality to allow for manipulation without having to maintain the context.\n\n```\nclient.getBadge({system: 'system-slug', badge: 'badge-slug'}, function (err, badge) {\n  if (err) return handleError(err);\n\n  badge.description = 'A new badge description';\n  client.saveBadge({system: 'system-slug', badge: badge});\n\n  client.getApplications({system: 'system-slug', badge: badge}, function (err, applications) {\n    if (err) return handleError(err);\n\n    applications.forEach(function (application) {\n      // handle application\n    });\n  });\n});\n```\n\nIs equivalent to:\n\n```\nclient.getBadge({system: 'system-slug', badge: 'badge-slug'}, function (err, badge) {\n  if (err) return handleError(err);\n\n  badge.description = 'A new badge description';\n  badge.save();\n\n  badge.getApplications(function (err, applications) {\n    if (err) return handleError(err);\n\n    applications.forEach(function (application) {\n      // handle application\n    })\n  });\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "badgekit-api-client@0.2.1",
  "dist": {
    "shasum": "8263e2adb476b393f68bc5577e3f7cf663ce5183"
  },
  "_resolved": "git://github.com/mozilla/badgekit-api-client#0469ba9b8a62313b7a13077b08749b1a1ea7056c",
  "_from": "git://github.com/mozilla/badgekit-api-client",
  "_fromGithub": true
}
